{"version":3,"sources":["components/header/Header.jsx","components/color-card/ColorCard.jsx","actions/types.js","actions/actions-creator.js","actions/actions.js","components/cards-box/CardsBox.jsx","components/error-boundry/error-boundry.jsx","components/app/App.jsx","reducers/initial-state.js","reducers/root-reducer.js","store.js","index.js"],"names":["Header","className","ColorCard","color","clicked","onClick","style","backgroundColor","Types","actionCreator","actionType","actionPayload","type","payload","cardToggleClick","id","delayCardCompare","dispatch","Promise","resolve","setTimeout","cardCompare","CardsBox","cards","useSelector","state","useDispatch","length","TransitionGroup","map","card","CSSTransition","key","timeout","classNames","a","result","Error","ErrorBoundry","props","hasError","error","errorInfo","console","log","this","children","Component","App","initialState","level","uuidv4","findItem","arr","idx","find","trigClicked","compareColorsInCards","alredyClickedCardIndex","findIndex","cardIndexInCardsArray","alredyClickedCard","filter","colorCard","removeColors","resetFirstCard","slice","resetColorCards","whenClicked","clickedCard","rootReducer","action","store","createStore","applyMiddleware","thunkMiddleware","getState","next","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.821836f6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header-text centered\"><span className=\"header-text-color-one\">Color</span> <span\n      className=\"header-text-color-two\">Cards</span> <span className=\"header-text-color-three\">Game</span></h1>\n      <h2 className=\"centered\">Find two cards with the same color</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./color-card.css\";\nimport PropTypes from \"prop-types\";\n\nconst ColorCard = ({ color, clicked, onClick }) => {\n  return (\n    <div\n      className={\"color-card\" + (clicked ? \" clicked\" : \"\")}\n      onClick={onClick}\n    >\n      <div className=\"color-card-inner\">\n        <div className=\"color-card-front\">\n          <p className=\"color-card-text\">Click Me:)</p>\n        </div>\n        <div className=\"color-card-back\" style={{ backgroundColor: color }}>\n          <p className=\"color-card-text\">Find the same color</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nColorCard.propTypes = {\n  color: PropTypes.string.isRequired,\n  clicked: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default ColorCard;\n","export const Types = {\n  CARD_TOGGLE_CLICK: \"CARD_TOGGLE_CLICK\",\n  CARD_CLICKED: \"CARD_CLICKED\",\n  CARD_COMPARE_COLORS: \"CARD_COMPARE_COLORS\",\n  CARD_COLORS_MATCH: \"CARD_COLORS_MATCH\",\n  CARD_COLORS_NOT_MATCH: \"CARD_COLORS_NOT_MATCH\"\n};\n","export default function actionCreator(actionType, actionPayload) {\n  if (actionType && actionPayload) {\n    return {\n      type: actionType,\n      payload: actionPayload\n    };\n  } else if (actionType && !actionPayload) {\n    return {\n      type: actionType\n    };\n  } else {\n    return \"Error\";\n  }\n}\n","import { Types } from \"./types\";\nimport actionCreator from \"./actions-creator\";\n\nexport const cardToggleClick = id => actionCreator(Types.CARD_TOGGLE_CLICK, id);\n\nexport const cardCompare = id => actionCreator(Types.CARD_COMPARE_COLORS, id);\n\n\n//delay the card compare action to see the second card color\nconst delayCardCompare = (id, dispatch) => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(dispatch(cardCompare(id)));\n    }, 800);\n  });\n};\n\n//async action to trig the reducer\nexport const cardClicked = id => async dispatch => {\n  dispatch(cardToggleClick(id));\n\n  const result = await delayCardCompare(id, dispatch);\n  return result;\n};\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./cards-box.css\";\nimport ColorCard from \"../color-card\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nconst CardsBox = () => {\n  const { cards } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  //If no cards return Error. \n  if (!cards) {\n    return new Error(\"ColorCard crashed\");\n  } else if (cards.length === 0) {\n    //When all cards have been removed the game is ended\n    return (\n      <div className=\"winner\">\n        <h1 className=\"centered\">YOU WON!</h1>\n        <h1 className=\"centered\">CONGRATULATIONS!</h1>\n      </div>\n    );\n  } else {\n    //in all other cases render cards array\n    return (\n      <TransitionGroup className=\"cards-box\">\n        {cards.map(card => (\n          <CSSTransition key={card.id} timeout={500} classNames=\"item\">\n            <ColorCard\n              color={card.color}\n              clicked={card.clicked}\n              onClick={() => dispatch(actions.cardClicked(card.id))}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n};\n\nexport default CardsBox;\n","import React, { Component } from \"react\";\n\nexport default class ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.log(\"Error log:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h1>DON'T PANIC!</h1>\n          <h2>Something went wrong but we will fix it soon :)</h2>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport Header from \"../header\";\nimport CardsBox from \"../cards-box\";\nimport ErrorBoundry from \"../error-boundry\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ErrorBoundry>\n        <CardsBox />\n      </ErrorBoundry>\n    </div>\n  );\n}\n","import { v4 as uuidv4 } from \"uuid\";\n\n// const makeColor = num => {\n//       let fistSix = id.slice(0, 6);\n//       return \"#\" + fistSix;\n//     };\n//     const color = makeColor(id);\n//     console.log(id);\n//     console.log(color);\n\nconst initialState = {\n  level: 1,\n  cards: [\n    {\n      id: uuidv4(),\n      color: \"#f0690a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#f0690a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#10f90a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#1202b4\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#1202b4\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#10f90a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#f0699a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#101051\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#101051\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#f0699a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#13690a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108614\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108614\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#13690a\",\n      clicked: false\n    }\n  ]\n};\n\nexport default initialState;\n/*{\n      id: 1,\n      color: \"#f0690a\",\n      clicked: false\n    },\n    {\n      id: 2,\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: 3,\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: 4,\n      color: \"#f0690a\",\n      clicked: false\n    } */\n","import initialState from \"./initial-state\";\nimport { Types } from \"../actions/types\";\n\n//find item in the state array\nconst findItem = (arr, idx) => arr.find(({ id }) => id === idx);\n\n//trig single card.clicked property\nconst trigClicked = card => {\n  return {\n    ...card,\n    clicked: !card.clicked\n  };\n};\n//remove cards with same color\nconst removeColors = (state, cards, card, alredyClickedCard) => {\n  return {\n    ...state,\n    cards: cards.filter(\n      colorCard =>\n        colorCard.id !== card.id && colorCard.id !== alredyClickedCard.id\n    )\n  };\n};\n\n//reset cards with different colors\nconst resetColorCards = (\n  state,\n  cards,\n  card,\n  alredyClickedCard,\n  cardIndexInCardsArray,\n  alredyClickedCardIndex\n) => {\n  //reset last open card and save it on the same place\n  const resetFirstCard = [\n    ...cards.slice(0, cardIndexInCardsArray),\n    trigClicked(card),\n    ...cards.slice(cardIndexInCardsArray + 1)\n  ];\n  //reset first open card and save it on the same place\n  return {\n    ...state,\n    cards: [\n      ...resetFirstCard.slice(0, alredyClickedCardIndex),\n      trigClicked(alredyClickedCard),\n      ...resetFirstCard.slice(alredyClickedCardIndex + 1)\n    ]\n  };\n};\n//compare colors in cards\nconst compareColorsInCards = (state, cards, card) => {\n  const alredyClickedCardIndex = cards.findIndex(\n    ({ clicked, id }) => clicked === true && id !== card.id\n  );\n  //check if some card is open\n  if (alredyClickedCardIndex !== -1) {\n    console.log(\"one is clicked\");\n    //then check id\n    const cardIndexInCardsArray = cards.findIndex(({ id }) => id === card.id);\n    if (cardIndexInCardsArray !== alredyClickedCardIndex) {\n      console.log(\"cards not the same\");\n      //then compare colors\n      const alredyClickedCard = cards[alredyClickedCardIndex];\n      if (alredyClickedCard.color === card.color) {\n        console.log(\"remove\");\n        return removeColors(state, cards, card, alredyClickedCard);\n      } else {\n        return resetColorCards(\n          state,\n          cards,\n          card,\n          alredyClickedCard,\n          cardIndexInCardsArray,\n          alredyClickedCardIndex\n        );\n      }\n    }\n  }\n\n  return state;\n};\n\n//trig the card.clicked\nconst whenClicked = (state, cards, card, cardIndexInCardsArray) => {\n  const clickedCard = trigClicked(card);\n\n  return {\n    ...state,\n    cards: [\n      ...cards.slice(0, cardIndexInCardsArray),\n      clickedCard,\n      ...cards.slice(cardIndexInCardsArray + 1)\n    ]\n  };\n  \n};\n\n//root reducer will be passed to the store\n\nconst rootReducer = (state = initialState, action = {}) => {\n  const { cards } = state;\n  const card = findItem(cards, action.payload);\n  //find  index in cards array\n  const cardIndexInCardsArray = cards.findIndex(\n    ({ id }) => id === action.payload\n  );\n\n  switch (action.type) {\n    case Types.CARD_TOGGLE_CLICK:\n      return whenClicked(state, cards, card, cardIndexInCardsArray);\n    case Types.CARD_COMPARE_COLORS:\n      return compareColorsInCards(state, cards, card);\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst logMiddleware = ({ getState }) => next => action => {\n  console.log(\"logMiddleware\", action.type, getState());\n  return next(action);\n};\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logMiddleware)\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\"\nimport { Provider } from \"react-redux\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\n\n\nimport App from \"./components/app\";\nimport ErrorBoundry from \"./components/error-boundry\";\nimport store from \"./store\";\n\nconst Main = () => {\n  return (\n    <Provider store={store}>\n      <ErrorBoundry>\n        <App />\n      </ErrorBoundry>\n    </Provider>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Main />, rootElement);\n/* */\n"],"sourceRoot":""}