{"version":3,"sources":["components/header/Header.jsx","components/color-card/ColorCard.jsx","actions/types.js","actions/actions-creator.js","actions/actions.js","components/cards-box/CardsBox.jsx","components/main-content-container/MainContentContainer.jsx","components/error-boundry/error-boundry.jsx","components/sidebox/SideBox.jsx","components/app/App.jsx","reducers/initial-state.js","reducers/root-reducer.js","store.js","index.js"],"names":["Header","className","ColorCard","color","clicked","onClick","id","style","backgroundColor","Types","actionCreator","actionType","actionPayload","type","payload","cardToggleClick","delayCardCompare","dispatch","Promise","resolve","setTimeout","cardCompare","cardClicked","isComparing","openCards","openCardId","a","CardsBox","useSelector","state","cards","useDispatch","length","TransitionGroup","map","card","CSSTransition","key","timeout","classNames","actions","Error","MainContentContainer","props","children","ErrorBoundry","hasError","error","errorInfo","console","log","this","Component","SideBox","positionClass","App","initialState","uuidv4","findItem","arr","idx","find","resetCard","compareColorsInCards","alredyClickedCardIndex","findIndex","cardIndexInCardsArray","alredyClickedCard","filter","colorCard","removeColors","resetFirstCard","slice","resetColorCards","enableComparingState","disableComparingState","whenClicked","clickedCard","trigClicked","rootReducer","action","store","createStore","applyMiddleware","thunkMiddleware","getState","next","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+UAiBeA,G,qBAdA,WAEb,OACE,yBAAKC,UAAU,UACb,wBAAIA,UAAU,wBACZ,0BAAMA,UAAU,yBAAhB,UACA,0BAAMA,UAAU,yBAAhB,UACA,0BAAMA,UAAU,2BAAhB,SAEF,wBAAIA,UAAU,wBAAd,yC,kBCqBSC,G,cA7BG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAG5C,OACE,yBACEA,GAAIA,EACJL,UAAW,cAAeG,EAAU,WAAa,IACjDC,QAASA,GAEP,yBAAKJ,UAAW,oBACd,yBAAKA,UAAU,oBACb,uBAAGA,UAAW,mBAAd,eAGF,yBAAKA,UAAU,kBAAkBM,MAAO,CAAEC,gBAAiBL,IACzD,uBAAGF,UAAU,mBAAb,4B,2BCnBCQ,EACQ,oBADRA,EAEU,sBAFVA,EAGS,qBAHTA,EAIU,sBCJR,SAASC,EAAcC,EAAYC,GAChD,OAAID,GAAcC,EACT,CACLC,KAAMF,EACNG,QAASF,GAEFD,IAAeC,EACjB,CACLC,KAAMF,GAGD,QCRJ,IAAMI,EAAkB,SAAAT,GAAE,OAAII,EAAcD,EAAyBH,IAQtEU,EAAmB,SAACV,EAAIW,GAC5B,OAAO,IAAIC,SAAQ,SAAAC,GAEfC,YAAW,WAETD,EAAQF,EATW,SAAAX,GAAE,OAAII,EAAcD,EAA2BH,GASjDe,CAAYf,OAC5B,SAOIgB,EAAc,SAAChB,EAAIiB,EAAaC,EAAWC,GAA7B,8CAA4C,WAAMR,GAAN,SAAAS,EAAA,0DAGjEH,GAAeC,EAAY,GAC7BP,EAASF,EAAgBT,IAKvBiB,GAA6B,IAAdC,GAAmBC,IAAenB,EATgB,uBAYnEW,EAhCiCP,EAAcD,IAoBoB,SAc7DO,EAAiBV,EAAIW,GAdwC,OAiBnEA,EApCkCP,EAAcD,IAmBmB,2CAA5C,uDC+BZkB,EAhDE,WAAO,IAAD,EACiCC,aAAY,SAAAC,GAAK,OAAIA,KAAnEC,EADa,EACbA,MAAON,EADM,EACNA,UAAWD,EADL,EACKA,YAAaE,EADlB,EACkBA,WACjCR,EAAWc,cAWjB,OAAKD,EAEuB,IAAjBA,EAAME,OAGb,yBAAK/B,UAAU,kBACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,YAAd,YACA,wBAAIA,UAAU,YAAd,sBAQJ,yBAAKA,UAAU,kBACb,kBAACgC,EAAA,EAAD,CAAiBhC,UAAU,aACxB6B,EAAMI,KAAI,SAAAC,GAAI,OACb,kBAACC,EAAA,EAAD,CAAeC,IAAKF,EAAK7B,GAAIgC,QAAS,IAAKC,WAAW,QACpD,kBAAC,EAAD,CACEjC,GAAI6B,EAAK7B,GACTH,MAAOgC,EAAKhC,MACZC,QAAS+B,EAAK/B,QACdC,QAAS,kBAAMY,EAASuB,EAAoBL,EAAK7B,GAAIiB,EAAaC,EAAWC,aAvBlF,IAAIgB,MAAM,sBCTNC,G,OATc,SAACC,GAC1B,OACI,yBAAK1C,UAAU,0BACV0C,EAAMC,Y,oCCJEC,E,kDACnB,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IACDd,MAAQ,CACXiB,UAAU,GAHK,E,8DAWDC,EAAOC,GACvBC,QAAQC,IAAI,aAAcH,EAAOC,K,+BAIjC,OAAIG,KAAKtB,MAAMiB,SAEX,6BACE,4CACA,gFAICK,KAAKR,MAAMC,Y,gDAjBYG,GAE9B,MAAO,CAAED,UAAU,O,GAVmBM,aCW3BC,G,OAVC,SAACV,GAGb,OACI,2BAAO1C,UAAS,mBAAc0C,EAAMW,gBAChC,wBAAIrD,UAAU,iBAAd,iCCAG,SAASsD,IACtB,OACE,yBAAKtD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAASqD,cAAc,a,oCC0ElBE,EAxFM,CACnB/B,WAAY,GACZF,aAAa,EACbC,UAAW,EACXM,MAAO,CACL,CACExB,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,GAEX,CACEE,GAAImD,eACJtD,MAAO,UACPC,SAAS,KCnFTsD,EAAW,SAACC,EAAKC,GAAN,OAAcD,EAAIE,MAAK,qBAAGvD,KAAgBsD,MAwBrDE,EAAY,SAAC3B,GACjB,OAAO,2BACFA,GADL,IAEE/B,SAAS,KAiCP2D,EAAuB,SAAClC,EAAOC,EAAOK,GAAU,IAC5CX,EAAcK,EAAdL,UAGFwC,EAAyBlC,EAAMmC,WACnC,gBAAG7D,EAAH,EAAGA,QAASE,EAAZ,EAAYA,GAAZ,OAAiC,IAAZF,GAAoBE,IAAO6B,EAAK7B,MAGvD,GAAkB,IAAdkB,EAAiB,CAEnB,IAAM0C,EAAwBpC,EAAMmC,WAAU,qBAAG3D,KAAgB6B,EAAK7B,MAEtE,IAAgC,IAA5B0D,EAA+B,CAGjC,IAAMG,EAAoBrC,EAAMkC,GAChC,OAAIG,EAAkBhE,QAAUgC,EAAKhC,MAjEtB,SAAC0B,EAAOC,EAAOK,EAAMgC,GACxC,MAAO,CACL1C,WAAY,GACZF,aAAa,EACbC,UAAW,EACXM,MAAOA,EAAMsC,QACX,SAAAC,GAAS,OACPA,EAAU/D,KAAO6B,EAAK7B,IAAM+D,EAAU/D,KAAO6D,EAAkB7D,OA4DxDgE,CAAazC,EAAOC,EAAOK,EAAMgC,GA9CxB,SACtBtC,EACAC,EACAK,EACAgC,EACAD,EACAF,GAGA,IAAMO,EAAc,sBACfzC,EAAM0C,MAAM,EAAGN,IADA,CAElBJ,EAAU3B,IAFQ,YAGfL,EAAM0C,MAAMN,EAAwB,KAGzC,MAAO,CACLzC,WAAY,GACZF,aAAa,EACbC,UAAW,EACXM,MAAM,GAAD,mBACAyC,EAAeC,MAAM,EAAGR,IADxB,CAEHF,EAAUK,IAFP,YAGAI,EAAeC,MAAMR,EAAyB,MA0BxCS,CACL5C,EACAC,EACAK,EACAgC,EACAD,EACAF,IAMR,OAAOnC,GAGH6C,EAAuB,SAAC7C,GAC5B,OAAO,aACLN,aAAa,GACVM,IAID8C,EAAwB,SAAC9C,GAC7B,OAAO,aACLN,aAAa,GACVM,IAID+C,EAAc,SAAC/C,EAAOC,EAAOK,EAAM+B,GAA2B,IAC1D1C,EAA0BK,EAA1BL,UAAWC,EAAeI,EAAfJ,WAInB,GAAID,EAAY,EAAG,CAEjB,IAAMqD,EAjHU,SAAA1C,GAClB,OAAO,2BACFA,GADL,IAEE/B,SAAU+B,EAAK/B,UA8GK0E,CAAY3C,GAEhC,OAAIV,IAAeU,EAAK7B,GACf,2BACFuB,GADL,IAEEJ,WAAY,GACZD,UAAW,EACXM,MAAM,GAAD,mBACAA,EAAM0C,MAAM,EAAGN,IADf,CAEHW,GAFG,YAGA/C,EAAM0C,MAAMN,EAAwB,OAItC,2BACFrC,GADL,IAEEJ,WAAYU,EAAK7B,GACjBkB,UAAWA,EAAY,EACvBM,MAAM,GAAD,mBACAA,EAAM0C,MAAM,EAAGN,IADf,CAEHW,GAFG,YAGA/C,EAAM0C,MAAMN,EAAwB,OAM7C,OAAOrC,GA4BMkD,EAtBK,WAAwC,IAAvClD,EAAsC,uDAA9B2B,EAAcwB,EAAgB,uDAAP,GAC1ClD,EAAUD,EAAVC,MACFK,EAAOuB,EAAS5B,EAAOkD,EAAOlE,SAE9BoD,EAAwBpC,EAAMmC,WAClC,qBAAG3D,KAAgB0E,EAAOlE,WAG5B,OAAQkE,EAAOnE,MACb,KAAKJ,EACH,OAAOmE,EAAY/C,EAAOC,EAAOK,EAAM+B,GACzC,KAAKzD,EACH,OAAOiE,EAAqB7C,GAC9B,KAAKpB,EACH,OAAOsD,EAAqBlC,EAAOC,EAAOK,GAC5C,KAAK1B,EACH,OAAOkE,EAAsB9C,GAC/B,QACE,OAAOA,I,SC7JEoD,EALDC,YACZH,EACAI,YAAgBC,KAPI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,SAAAC,GAAI,OAAI,SAAAN,GAE9C,OADA/B,QAAQC,IAAI,gBAAiB8B,EAAOnE,KAAMwE,KACnCC,EAAKN,SCORO,EAAO,WACX,OACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,KACE,kBAAC1B,EAAD,SAMFiC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,K","file":"static/js/main.a5720e57.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nconst Header = () => {\n  \n  return (\n    <div className=\"header\" >\n      <h1 className=\"header-text centered\" >\n        <span className=\"header-text-color-one\" >Color </span>\n        <span className=\"header-text-color-two\">Cards </span>\n        <span className=\"header-text-color-three\">Game</span>\n      </h1>\n      <h2 className=\"header-text centered\">Find two cards with the same color</h2>\n    </div>\n  );\n};\n\nexport default Header;\n\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport \"./color-card.css\";\nimport PropTypes from \"prop-types\";\n\nconst ColorCard = ({ color, clicked, onClick, id }) => {\n\n\n  return (\n    <div\n      id={id}\n      className={\"color-card\" +(clicked ? \" clicked\" : \"\")}\n      onClick={onClick}\n    >\n        <div className={\"color-card-inner\" }>\n          <div className=\"color-card-front\">\n            <p className={\"color-card-text\"}>Click Me:)</p>\n          </div>\n\n          <div className=\"color-card-back\" style={{ backgroundColor: color }}>\n            <p className=\"color-card-text\">Find the same color</p>\n          </div>\n        </div>\n    </div>\n  );\n};\n\nColorCard.propTypes = {\n  color: PropTypes.string.isRequired,\n  clicked: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\n\nexport default ColorCard;\n","export const Types = {\n  CARD_TOGGLE_CLICK: \"CARD_TOGGLE_CLICK\",\n  CARD_COMPARE_COLORS: \"CARD_COMPARE_COLORS\",\n  CARD_COMPARE_START: \"CARD_COMPARE_START\",\n  CARD_COMPARE_FINISH: \"CARD_COMPARE_FINISH\"\n};\n","export default function actionCreator(actionType, actionPayload) {\n  if (actionType && actionPayload) {\n    return {\n      type: actionType,\n      payload: actionPayload\n    };\n  } else if (actionType && !actionPayload) {\n    return {\n      type: actionType\n    };\n  } else {\n    return \"Error\";\n  }\n}\n","import { Types } from \"./types\";\nimport actionCreator from \"./actions-creator\";\n\nexport const cardToggleClick = id => actionCreator(Types.CARD_TOGGLE_CLICK, id);\nexport const cardCompareStart = ()=> actionCreator(Types.CARD_COMPARE_START);\nexport const cardCompareFinish = ()=> actionCreator(Types.CARD_COMPARE_FINISH);\n\nexport const cardCompare = id => actionCreator(Types.CARD_COMPARE_COLORS, id);\n\n\n//delay the card compare action to let animation finish\nconst delayCardCompare = (id, dispatch) => {\n  return new Promise(resolve => {\n\n      setTimeout(() => {\n\n        resolve(dispatch(cardCompare(id)));\n      }, 1000);\n      \n  });\n    \n};\n\n//async action to trig the reducer\nexport const cardClicked = (id, isComparing, openCards, openCardId) => async dispatch => {\n\n  //disable click if comparing and more then 2 clicks\n  if(!isComparing && openCards < 2){\n    dispatch(cardToggleClick(id));\n  }\n  \n  \n  //start comparing only if one card is open\n  if(!isComparing && openCards === 1 && openCardId !== id) {\n    \n    //dispatch compare Start to disable other cards\n    dispatch(cardCompareStart());\n    //wait some time for the animation\n    await delayCardCompare(id, dispatch)\n\n    //after comparing finish enable all cards \n    dispatch(cardCompareFinish())\n    \n  }\n  \n};\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./cards-box.css\";\nimport ColorCard from \"../color-card\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nconst CardsBox = () => {\n  const { cards, openCards, isComparing, openCardId } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const handleOnClick = (openCards, cardId) => {\n    if (openCards < 2) {\n      return (\n        dispatch(actions.cardClicked(cardId))\n      )\n    }\n  }\n\n\n  //If no cards return Error. \n  if (!cards) {\n    return new Error(\"ColorCard crashed\");\n  } else if (cards.length === 0) {\n    //When all cards have been removed the game is ended\n    return (\n      <div className=\"game-container\">\n        <div className=\"winner\">\n          <h1 className=\"centered\">YOU WON!</h1>\n          <h1 className=\"centered\">CONGRATULATIONS!</h1>\n        </div>\n      </div>\n\n    );\n  } else {\n    //in all other cases render cards array\n    return (\n      <div className=\"game-container\">\n        <TransitionGroup className=\"cards-box\">\n          {cards.map(card => (\n            <CSSTransition key={card.id} timeout={500} classNames=\"item\">\n              <ColorCard\n                id={card.id}\n                color={card.color}\n                clicked={card.clicked}\n                onClick={() => dispatch(actions.cardClicked(card.id, isComparing, openCards, openCardId))}\n              />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n\n    );\n  }\n};\n\nexport default CardsBox;\n","import React from \"react\";\nimport \"./main-content-container.css\"\n\nconst MainContentContainer = (props) => {\n    return (\n        <div className=\"main-content-container\">\n            {props.children}\n        </div>\n    )\n}\n \n\nexport default MainContentContainer;","import React, { Component } from \"react\";\n\nexport default class ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.log(\"Error log:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h1>DON'T PANIC!</h1>\n          <h2>Something went wrong but we will fix it soon :)</h2>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport \"./side-box.css\";\n\nconst SideBox = (props)=>{\n\n    // floats to the right with \"right\" class\n    return(\n        <aside className={`side-box ${props.positionClass}`}>\n            <h2 className=\"side-box-text\">Place for the advertisment</h2>\n        </aside>\n    )\n}\n\nexport default SideBox;","import React from \"react\";\nimport Header from \"../header\";\nimport CardsBox from \"../cards-box\";\nimport MainContentContainer from \"../main-content-container\";\nimport ErrorBoundry from \"../error-boundry\";\nimport SideBox from \"../sidebox/SideBox\";\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ErrorBoundry>\n        <MainContentContainer>\n          <SideBox />\n          <ErrorBoundry>\n            <CardsBox />\n          </ErrorBoundry>\n          <SideBox positionClass=\"right\" />\n        </MainContentContainer>\n      </ErrorBoundry>\n\n    </div>\n  );\n}\n","import { v4 as uuidv4 } from \"uuid\";\n\n\n\nconst initialState = {\n  openCardId: \"\",\n  isComparing: false,\n  openCards: 0,\n  cards: [\n    {\n      id: uuidv4(),\n      color: \"#f0690a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#f0690a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#10f90a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#1202b4\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#1202b4\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#10f90a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#f0699a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#101051\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#101051\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#f0699a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#13690a\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108614\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#108614\",\n      clicked: false\n    },\n    {\n      id: uuidv4(),\n      color: \"#13690a\",\n      clicked: false\n    }\n  ]\n};\n\nexport default initialState;\n/*{\n      id: 1,\n      color: \"#f0690a\",\n      clicked: false\n    },\n    {\n      id: 2,\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: 3,\n      color: \"#108651\",\n      clicked: false\n    },\n    {\n      id: 4,\n      color: \"#f0690a\",\n      clicked: false\n    } */\n","import initialState from \"./initial-state\";\nimport { Types } from \"../actions/types\";\n\n//find item in the state array\nconst findItem = (arr, idx) => arr.find(({ id }) => id === idx);\n\n//trig single card.clicked property\nconst trigClicked = card => {\n  return {\n    ...card,\n    clicked: !card.clicked\n  };\n};\n\n//remove cards with same color\nconst removeColors = (state, cards, card, alredyClickedCard) => {\n  return {\n    openCardId: \"\",\n    isComparing: false,\n    openCards: 0,\n    cards: cards.filter(\n      colorCard =>\n        colorCard.id !== card.id && colorCard.id !== alredyClickedCard.id\n    )\n  };\n};\n\n//reset single card\nconst resetCard = (card) => {\n  return {\n    ...card,\n    clicked: false\n  }\n}\n\n//reset cards with different colors\nconst resetColorCards = (\n  state,\n  cards,\n  card,\n  alredyClickedCard,\n  cardIndexInCardsArray,\n  alredyClickedCardIndex\n) => {\n  //reset last open card and save it on the same place\n  const resetFirstCard = [\n    ...cards.slice(0, cardIndexInCardsArray),\n    resetCard(card),\n    ...cards.slice(cardIndexInCardsArray + 1)\n  ];\n  //reset first open card and save it on the same place\n  return {\n    openCardId: \"\",\n    isComparing: false,\n    openCards: 0,\n    cards: [\n      ...resetFirstCard.slice(0, alredyClickedCardIndex),\n      resetCard(alredyClickedCard),\n      ...resetFirstCard.slice(alredyClickedCardIndex + 1)\n    ]\n  };\n};\n\n//compare colors in cards\nconst compareColorsInCards = (state, cards, card) => {\n  const { openCards } = state;\n\n  //check if some card is open\n  const alredyClickedCardIndex = cards.findIndex(\n    ({ clicked, id }) => clicked === true && id !== card.id\n  );\n\n  if (openCards === 2) {\n\n    const cardIndexInCardsArray = cards.findIndex(({ id }) => id === card.id);\n    //check if alredyClickedCardIndex is exist\n    if (alredyClickedCardIndex !== -1) {\n\n      //then compare colors\n      const alredyClickedCard = cards[alredyClickedCardIndex];\n      if (alredyClickedCard.color === card.color) {\n\n        return removeColors(state, cards, card, alredyClickedCard);\n      } else {\n        return resetColorCards(\n          state,\n          cards,\n          card,\n          alredyClickedCard,\n          cardIndexInCardsArray,\n          alredyClickedCardIndex\n        );\n      }\n    }\n  }\n\n  return state;\n};\n//enable comparing state\nconst enableComparingState = (state) => {\n  return {\n    isComparing: true,\n    ...state\n  }\n}\n//disable comparing state\nconst disableComparingState = (state) => {\n  return {\n    isComparing: false,\n    ...state\n  }\n}\n//trig the card.clicked\nconst whenClicked = (state, cards, card, cardIndexInCardsArray) => {\n  const { openCards, openCardId } = state;\n\n  //skip click if two cards already open\n\n  if (openCards < 2) {\n    \n    const clickedCard = trigClicked(card);\n    //reset state for the same card\n    if (openCardId === card.id) {\n      return {\n        ...state,\n        openCardId: \"\",\n        openCards: 0,\n        cards: [\n          ...cards.slice(0, cardIndexInCardsArray),\n          clickedCard,\n          ...cards.slice(cardIndexInCardsArray + 1)\n        ]\n      };\n    }\n    return {\n      ...state,\n      openCardId: card.id,\n      openCards: openCards + 1,\n      cards: [\n        ...cards.slice(0, cardIndexInCardsArray),\n        clickedCard,\n        ...cards.slice(cardIndexInCardsArray + 1)\n      ]\n    };\n  }\n\n\n  return state;\n\n};\n\n//root reducer will be passed to the store\n\nconst rootReducer = (state = initialState, action = {}) => {\n  const { cards } = state;\n  const card = findItem(cards, action.payload);\n  //find  index in cards array\n  const cardIndexInCardsArray = cards.findIndex(\n    ({ id }) => id === action.payload\n  );\n\n  switch (action.type) {\n    case Types.CARD_TOGGLE_CLICK:\n      return whenClicked(state, cards, card, cardIndexInCardsArray);\n    case Types.CARD_COMPARE_START:\n      return enableComparingState(state);\n    case Types.CARD_COMPARE_COLORS:\n      return compareColorsInCards(state, cards, card);\n    case Types.CARD_COMPARE_FINISH:\n      return disableComparingState(state);\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst logMiddleware = ({ getState }) => next => action => {\n  console.log(\"logMiddleware\", action.type, getState());\n  return next(action);\n};\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logMiddleware)\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\"\nimport { Provider } from \"react-redux\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\n\n\nimport App from \"./components/app\";\nimport ErrorBoundry from \"./components/error-boundry\";\nimport store from \"./store\";\n\nconst Main = () => {\n  return (\n    <Provider store={store}>\n      <ErrorBoundry>\n        <App />\n      </ErrorBoundry>\n    </Provider>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Main />, rootElement);\n/* */\n"],"sourceRoot":""}